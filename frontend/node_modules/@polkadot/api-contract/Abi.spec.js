"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Abi = _interopRequireDefault(require("./Abi"));

var testContracts = _interopRequireWildcard(require("../test/contracts"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const abis = _objectSpread({}, testContracts);

function compareInterface(name, messageIds) {
  try {
    const inkAbi = new _Abi.default(abis[name]);
    expect(inkAbi.messages.map(({
      identifier
    }) => identifier)).toEqual(messageIds);
  } catch (error) {
    console.error(error);
    throw error;
  }
}

describe('Abi', () => {
  describe('construction', () => {
    it('initializes from a contract ABI (flipper)', () => {
      compareInterface('flipper', ['flip', 'get']);
    });
    it('initializes from a contract ABI (incrementer)', () => {
      compareInterface('incrementer', ['inc', 'get']);
    });
    it('initializes from a contract ABI (erc20)', () => {
      compareInterface('erc20', ['total_supply', 'balance_of', 'allowance', 'transfer', 'approve', 'transfer_from']);
    });
    it('initializes from a contract ABI (delegator)', () => {
      compareInterface('delegator', ['get', 'change', 'switch']);
    });
    it('initializes from a contract ABI (dns)', () => {
      compareInterface('dns', ['register', 'set_address', 'transfer', 'get_address']);
    });
    it('initializes from a contract ABI (erc721)', () => {
      compareInterface('erc721', ['balance_of', 'owner_of', 'get_approved', 'is_approved_for_all', 'set_approval_for_all', 'approve', 'transfer', 'transfer_from', 'mint', 'burn']);
    });
    it('initializes from a contract ABI (multisig_plain)', () => {
      compareInterface('multisigPlain', ['add_owner', 'remove_owner', 'replace_owner', 'change_requirement', 'submit_transaction', 'cancel_transaction', 'confirm_transaction', 'revoke_confirmation', 'invoke_transaction', 'eval_transaction']);
    });
  });
});