/// <reference types="node" />
import { ApiTypes, DecorateMethod } from '@polkadot/api/types';
import { SubmittableExtrinsic } from '@polkadot/api/submittable/types';
import { AnyJson, ISubmittableResult } from '@polkadot/types/types';
import { SubmittableResult } from '@polkadot/api';
import ApiBase from '@polkadot/api/base';
import Abi from '../Abi';
import Base from './Base';
import Blueprint from './Blueprint';
export declare class CodeSubmittableResult<ApiType extends ApiTypes> extends SubmittableResult {
    readonly blueprint?: Blueprint<ApiType>;
    constructor(result: ISubmittableResult, blueprint?: Blueprint<ApiType>);
}
export default class Code<ApiType extends ApiTypes> extends Base<ApiType> {
    readonly code: Uint8Array;
    constructor(api: ApiBase<ApiType>, abi: AnyJson | Abi, wasm: Uint8Array | string | Buffer, decorateMethod: DecorateMethod<ApiType>);
    createBlueprint(): SubmittableExtrinsic<ApiType, CodeSubmittableResult<ApiType>>;
}
