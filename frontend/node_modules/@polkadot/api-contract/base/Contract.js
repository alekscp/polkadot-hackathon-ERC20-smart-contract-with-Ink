"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classPrivateFieldLooseBase2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldLooseBase"));

var _classPrivateFieldLooseKey2 = _interopRequireDefault(require("@babel/runtime/helpers/classPrivateFieldLooseKey"));

var _operators = require("rxjs/operators");

var _util = require("@polkadot/util");

var _util2 = require("../util");

var _Base = _interopRequireDefault(require("./Base"));

// Copyright 2017-2020 @polkadot/api-contract authors & contributors
// SPDX-License-Identifier: Apache-2.0
const ERROR_NO_CALL = 'Your node does not expose the contracts.call RPC. This is most probably due to a runtime configuration.';

var _tx = (0, _classPrivateFieldLooseKey2.default)("tx");

var _query = (0, _classPrivateFieldLooseKey2.default)("query");

var _getGas = (0, _classPrivateFieldLooseKey2.default)("getGas");

var _exec = (0, _classPrivateFieldLooseKey2.default)("exec");

var _read = (0, _classPrivateFieldLooseKey2.default)("read");

class Contract extends _Base.default {
  constructor(api, abi, address, decorateMethod) {
    super(api, abi, decorateMethod);
    this.address = void 0;
    Object.defineProperty(this, _tx, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _query, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _getGas, {
      writable: true,
      value: _gasLimit => {
        const gasLimit = (0, _util.bnToBn)(_gasLimit);
        return gasLimit.lten(0) ? this.api.consts.system.maximumBlockWeight.muln(64).divn(100) : gasLimit;
      }
    });
    Object.defineProperty(this, _exec, {
      writable: true,
      value: (messageOrId, value, gasLimit, params) => {
        return this.api.tx.contracts.call(this.address, value, (0, _classPrivateFieldLooseBase2.default)(this, _getGas)[_getGas](gasLimit), (0, _util2.encodeMessage)(this.registry, this.abi.findMessage(messageOrId), params));
      }
    });
    Object.defineProperty(this, _read, {
      writable: true,
      value: (messageOrId, value, gasLimit, params) => {
        (0, _util.assert)(this.hasRpcContractsCall, ERROR_NO_CALL);
        const message = this.abi.findMessage(messageOrId);
        return {
          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
          send: this._decorateMethod(origin => this.api.rx.rpc.contracts.call({
            dest: this.address,
            gasLimit: (0, _classPrivateFieldLooseBase2.default)(this, _getGas)[_getGas](gasLimit),
            inputData: (0, _util2.encodeMessage)(this.registry, message, params),
            origin,
            value
          }).pipe((0, _operators.map)(result => ({
            output: result.isSuccess && message.returnType ? (0, _util2.formatData)(this.registry, result.asSuccess.data, message.returnType) : null,
            result
          }))))
        };
      }
    });
    this.address = this.registry.createType('AccountId', address);
    this.abi.messages.forEach(m => {
      const messageName = (0, _util.stringCamelCase)(m.identifier);

      if ((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx][messageName])) {
        (0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx][messageName] = (value, gasLimit, ...params) => (0, _classPrivateFieldLooseBase2.default)(this, _exec)[_exec](m, value, gasLimit, params);
      }

      if ((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _query)[_query][messageName])) {
        (0, _classPrivateFieldLooseBase2.default)(this, _query)[_query][messageName] = (origin, value, gasLimit, ...params) => (0, _classPrivateFieldLooseBase2.default)(this, _read)[_read](m, value, gasLimit, params).send(origin);
      }
    });
  }

  get hasRpcContractsCall() {
    var _this$api$rx$rpc$cont;

    return (0, _util.isFunction)((_this$api$rx$rpc$cont = this.api.rx.rpc.contracts) === null || _this$api$rx$rpc$cont === void 0 ? void 0 : _this$api$rx$rpc$cont.call);
  }

  get query() {
    (0, _util.assert)(this.hasRpcContractsCall, ERROR_NO_CALL);
    return (0, _classPrivateFieldLooseBase2.default)(this, _query)[_query];
  }

  get tx() {
    return (0, _classPrivateFieldLooseBase2.default)(this, _tx)[_tx];
  }

  exec(messageOrId, value, gasLimit, ...params) {
    return (0, _classPrivateFieldLooseBase2.default)(this, _exec)[_exec](messageOrId, value, gasLimit, params);
  }

  read(messageOrId, value, gasLimit, ...params) {
    return (0, _classPrivateFieldLooseBase2.default)(this, _read)[_read](messageOrId, value, gasLimit, params);
  }

}

exports.default = Contract;