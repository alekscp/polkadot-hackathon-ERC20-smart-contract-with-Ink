import { ApiTypes, DecorateMethod } from '@polkadot/api/types';
import { SubmittableExtrinsic } from '@polkadot/api/submittable/types';
import { AccountId } from '@polkadot/types/interfaces';
import { AnyJson, CodecArg } from '@polkadot/types/types';
import { AbiMessage } from '../types';
import { ContractRead, MapMessageExec, MapMessageRead } from './types';
import BN from 'bn.js';
import ApiBase from '@polkadot/api/base';
import Abi from '../Abi';
import Base from './Base';
export default class Contract<ApiType extends ApiTypes> extends Base<ApiType> {
    #private;
    readonly address: AccountId;
    constructor(api: ApiBase<ApiType>, abi: AnyJson | Abi, address: string | AccountId, decorateMethod: DecorateMethod<ApiType>);
    get hasRpcContractsCall(): boolean;
    get query(): MapMessageRead<ApiType>;
    get tx(): MapMessageExec<ApiType>;
    exec(messageOrId: AbiMessage | string | number, value: BigInt | BN | string | number, gasLimit: BigInt | BN | string | number, ...params: CodecArg[]): SubmittableExtrinsic<ApiType>;
    read(messageOrId: AbiMessage | string | number, value: BigInt | BN | string | number, gasLimit: BigInt | BN | string | number, ...params: CodecArg[]): ContractRead<ApiType>;
}
