{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nconst recordIdentity = record => record;\n\nfunction filterAndApply(events, section, methods, onFound) {\n  return events.filter(({\n    event\n  }) => section === event.section && methods.includes(event.method)).map(record => onFound(record));\n}\n\nfunction extractError(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed'], ({\n    event: {\n      data\n    }\n  }) => data[0])[0];\n}\n\nfunction extractInfo(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], ({\n    event: {\n      data,\n      method\n    }\n  }) => method === 'ExtrinsicSuccess' ? data[0] : data[1])[0];\n}\n\nclass SubmittableResult {\n  constructor({\n    dispatchError,\n    dispatchInfo,\n    events,\n    status\n  }) {\n    this.dispatchError = void 0;\n    this.dispatchInfo = void 0;\n    this.events = void 0;\n    this.status = void 0;\n    this.dispatchError = dispatchError || extractError(events);\n    this.dispatchInfo = dispatchInfo || extractInfo(events);\n    this.events = events || [];\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return filterAndApply(this.events, section, [method], recordIdentity);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.filterRecords(section, method)[0];\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    var _this$dispatchError, _this$dispatchInfo;\n\n    return {\n      dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),\n      dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),\n      events: this.events.map(event => event.toHuman(isExtended)),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}\n\nexports.default = SubmittableResult;","map":{"version":3,"sources":["/Users/aclapinpepin/code/substrate-front-end-template/node_modules/@polkadot/api-contract/node_modules/@polkadot/api/submittable/Result.js"],"names":["Object","defineProperty","exports","value","default","recordIdentity","record","filterAndApply","events","section","methods","onFound","filter","event","includes","method","map","extractError","data","extractInfo","SubmittableResult","constructor","dispatchError","dispatchInfo","status","isCompleted","isError","isInBlock","isFinalized","isDropped","isFinalityTimeout","isInvalid","isUsurped","isWarning","isRetracted","filterRecords","findRecord","toHuman","isExtended","_this$dispatchError","_this$dispatchInfo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst recordIdentity = record => record;\n\nfunction filterAndApply(events, section, methods, onFound) {\n  return events.filter(({\n    event\n  }) => section === event.section && methods.includes(event.method)).map(record => onFound(record));\n}\n\nfunction extractError(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed'], ({\n    event: {\n      data\n    }\n  }) => data[0])[0];\n}\n\nfunction extractInfo(events = []) {\n  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], ({\n    event: {\n      data,\n      method\n    }\n  }) => method === 'ExtrinsicSuccess' ? data[0] : data[1])[0];\n}\n\nclass SubmittableResult {\n  constructor({\n    dispatchError,\n    dispatchInfo,\n    events,\n    status\n  }) {\n    this.dispatchError = void 0;\n    this.dispatchInfo = void 0;\n    this.events = void 0;\n    this.status = void 0;\n    this.dispatchError = dispatchError || extractError(events);\n    this.dispatchInfo = dispatchInfo || extractInfo(events);\n    this.events = events || [];\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return filterAndApply(this.events, section, [method], recordIdentity);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.filterRecords(section, method)[0];\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    var _this$dispatchError, _this$dispatchInfo;\n\n    return {\n      dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),\n      dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),\n      events: this.events.map(event => event.toHuman(isExtended)),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}\n\nexports.default = SubmittableResult;"]},"metadata":{},"sourceType":"script"}