{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _MetaRegistry = _interopRequireDefault(require(\"./MetaRegistry\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction findMessage(list, messageOrId) {\n  const message = (0, _util.isNumber)(messageOrId) ? list[messageOrId] : (0, _util.isString)(messageOrId) ? list.find(({\n    identifier\n  }) => identifier === messageOrId.toString()) : messageOrId;\n  (0, _util.assert)(message, `Attempted to call an invalid contract interface, ${JSON.stringify(messageOrId)}`);\n  return message;\n}\n\nvar _createBase = (0, _classPrivateFieldLooseKey2.default)(\"createBase\");\n\nclass Abi {\n  constructor(abiJson, chainProperties) {\n    this.constructors = void 0;\n    this.json = void 0;\n    this.messages = void 0;\n    this.project = void 0;\n    this.registry = void 0;\n    Object.defineProperty(this, _createBase, {\n      writable: true,\n      value: (spec, index, add = {}) => {\n        const identifier = spec.name.toString();\n        const args = spec.args.map((arg, index) => {\n          try {\n            (0, _util.assert)((0, _util.isObject)(arg.type), 'Invalid type definition found');\n            return {\n              name: (0, _util.stringCamelCase)(arg.name.toString()),\n              type: this.registry.getMetaTypeDef(arg.type.type)\n            };\n          } catch (error) {\n            console.error(`Error expanding argument ${index} in ${JSON.stringify(spec)}`);\n            throw error;\n          }\n        });\n        return _objectSpread(_objectSpread({}, add), {}, {\n          args,\n          docs: spec.docs.map(doc => doc.toString()),\n          identifier,\n          index,\n          selector: spec.selector\n        });\n      }\n    });\n    const json = (0, _util.isString)(abiJson) ? JSON.parse(abiJson) : abiJson;\n    (0, _util.assert)((0, _util.isObject)(json) && !Array.isArray(json) && json.metadataVersion && (0, _util.isObject)(json.spec) && !Array.isArray(json.spec) && Array.isArray(json.spec.constructors) && Array.isArray(json.spec.messages), 'Invalid JSON ABI structure supplied, expected a recent metadata version');\n    this.json = json;\n    this.registry = new _MetaRegistry.default(chainProperties);\n    this.project = this.registry.createType('ContractProject', json);\n    this.registry.setMetaTypes(this.project.types);\n    this.project.types.forEach((_, index) => this.registry.getMetaTypeDef(this.registry.createType('SiLookupTypeId', index + 1)));\n    this.constructors = this.project.spec.constructors.map((spec, index) => (0, _classPrivateFieldLooseBase2.default)(this, _createBase)[_createBase](spec, index, {\n      isConstructor: true\n    }));\n    this.messages = this.project.spec.messages.map((spec, index) => {\n      const typeSpec = spec.returnType.unwrapOr(null);\n      return (0, _classPrivateFieldLooseBase2.default)(this, _createBase)[_createBase](spec, index, {\n        isMutating: spec.mutates.isTrue,\n        isPayable: spec.payable.isTrue,\n        returnType: typeSpec ? this.registry.getMetaTypeDef(typeSpec.type) : null\n      });\n    });\n  }\n\n  findConstructor(constructorOrId) {\n    return findMessage(this.constructors, constructorOrId);\n  }\n\n  findMessage(messageOrId) {\n    return findMessage(this.messages, messageOrId);\n  }\n\n}\n\nexports.default = Abi;","map":{"version":3,"sources":["/Users/aclapinpepin/code/substrate-front-end-template/node_modules/@polkadot/api-contract/Abi.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","_MetaRegistry","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","findMessage","list","messageOrId","message","isNumber","isString","find","identifier","toString","assert","JSON","stringify","_createBase","Abi","constructor","abiJson","chainProperties","constructors","json","messages","project","registry","writable","spec","index","add","name","args","map","arg","isObject","type","stringCamelCase","getMetaTypeDef","error","console","docs","doc","selector","parse","Array","isArray","metadataVersion","createType","setMetaTypes","types","_","isConstructor","typeSpec","returnType","unwrapOr","isMutating","mutates","isTrue","isPayable","payable","findConstructor","constructorOrId"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _MetaRegistry = _interopRequireDefault(require(\"./MetaRegistry\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction findMessage(list, messageOrId) {\n  const message = (0, _util.isNumber)(messageOrId) ? list[messageOrId] : (0, _util.isString)(messageOrId) ? list.find(({\n    identifier\n  }) => identifier === messageOrId.toString()) : messageOrId;\n  (0, _util.assert)(message, `Attempted to call an invalid contract interface, ${JSON.stringify(messageOrId)}`);\n  return message;\n}\n\nvar _createBase = (0, _classPrivateFieldLooseKey2.default)(\"createBase\");\n\nclass Abi {\n  constructor(abiJson, chainProperties) {\n    this.constructors = void 0;\n    this.json = void 0;\n    this.messages = void 0;\n    this.project = void 0;\n    this.registry = void 0;\n    Object.defineProperty(this, _createBase, {\n      writable: true,\n      value: (spec, index, add = {}) => {\n        const identifier = spec.name.toString();\n        const args = spec.args.map((arg, index) => {\n          try {\n            (0, _util.assert)((0, _util.isObject)(arg.type), 'Invalid type definition found');\n            return {\n              name: (0, _util.stringCamelCase)(arg.name.toString()),\n              type: this.registry.getMetaTypeDef(arg.type.type)\n            };\n          } catch (error) {\n            console.error(`Error expanding argument ${index} in ${JSON.stringify(spec)}`);\n            throw error;\n          }\n        });\n        return _objectSpread(_objectSpread({}, add), {}, {\n          args,\n          docs: spec.docs.map(doc => doc.toString()),\n          identifier,\n          index,\n          selector: spec.selector\n        });\n      }\n    });\n    const json = (0, _util.isString)(abiJson) ? JSON.parse(abiJson) : abiJson;\n    (0, _util.assert)((0, _util.isObject)(json) && !Array.isArray(json) && json.metadataVersion && (0, _util.isObject)(json.spec) && !Array.isArray(json.spec) && Array.isArray(json.spec.constructors) && Array.isArray(json.spec.messages), 'Invalid JSON ABI structure supplied, expected a recent metadata version');\n    this.json = json;\n    this.registry = new _MetaRegistry.default(chainProperties);\n    this.project = this.registry.createType('ContractProject', json);\n    this.registry.setMetaTypes(this.project.types);\n    this.project.types.forEach((_, index) => this.registry.getMetaTypeDef(this.registry.createType('SiLookupTypeId', index + 1)));\n    this.constructors = this.project.spec.constructors.map((spec, index) => (0, _classPrivateFieldLooseBase2.default)(this, _createBase)[_createBase](spec, index, {\n      isConstructor: true\n    }));\n    this.messages = this.project.spec.messages.map((spec, index) => {\n      const typeSpec = spec.returnType.unwrapOr(null);\n      return (0, _classPrivateFieldLooseBase2.default)(this, _createBase)[_createBase](spec, index, {\n        isMutating: spec.mutates.isTrue,\n        isPayable: spec.payable.isTrue,\n        returnType: typeSpec ? this.registry.getMetaTypeDef(typeSpec.type) : null\n      });\n    });\n  }\n\n  findConstructor(constructorOrId) {\n    return findMessage(this.constructors, constructorOrId);\n  }\n\n  findMessage(messageOrId) {\n    return findMessage(this.messages, messageOrId);\n  }\n\n}\n\nexports.default = Abi;"]},"metadata":{},"sourceType":"script"}