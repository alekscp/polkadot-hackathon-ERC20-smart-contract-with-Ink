{"ast":null,"code":"var _jsxFileName = \"/Users/aclapinpepin/code/substrate-front-end-template/src/TransferERC20.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Grid, Label, Icon } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\nimport { useSubstrate } from './substrate-lib';\nimport { apiContract, gasLimit } from './utils/apiContract';\n\nfunction Main(props) {\n  const {\n    api,\n    keyring\n  } = useSubstrate();\n  const {\n    accountPair\n  } = props;\n  const contract = apiContract(api);\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n  const [formState, setFormState] = useState({\n    addressTo: null,\n    amount: 0\n  });\n\n  const onChange = (_, data) => setFormState(prev => ({ ...prev,\n    [data.state]: data.value\n  }));\n\n  const {\n    addressTo,\n    amount\n  } = formState;\n\n  const onSelectAddressTo = address => setFormState(prev => ({ ...prev,\n    'addressTo': address\n  }));\n\n  const transfer = () => {\n    ontract.tx.transfer(0, gasLimit, addressTo, amount).signAndSend(accountPair, result => {\n      updateBalance();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Transfer of ERC20 Tokens\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"hand point right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), \"1 Unit = 1000000000000\")), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Transfer more than the existential amount for account with 0 balance\"), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    fluid: true,\n    label: \"To\",\n    type: \"text\",\n    placeholder: \"address\",\n    state: \"addressTo\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    fluid: true,\n    label: \"Amount\",\n    type: \"number\",\n    state: \"amount\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: transfer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Transfer!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowWrap: 'break-word'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, status)));\n}\n\nexport default function TransferERC20(props) {\n  const {\n    api\n  } = useSubstrate();\n  const {\n    accountPair\n  } = props;\n  return api.registry && accountPair ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/Users/aclapinpepin/code/substrate-front-end-template/src/TransferERC20.js"],"names":["React","useState","Form","Input","Grid","Label","Icon","TxButton","useSubstrate","apiContract","gasLimit","Main","props","api","keyring","accountPair","contract","keyringOptions","getPairs","map","account","key","address","value","text","meta","name","toUpperCase","icon","formState","setFormState","addressTo","amount","onChange","_","data","prev","state","onSelectAddressTo","transfer","ontract","tx","signAndSend","result","updateBalance","textAlign","overflowWrap","status","TransferERC20","registry"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Grid, Label, Icon } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\n\nimport { useSubstrate } from './substrate-lib';\nimport { apiContract, gasLimit } from './utils/apiContract';\n\nfunction Main (props) {\n  const { api, keyring } = useSubstrate();\n  const { accountPair } = props;\n\n  const contract = apiContract(api);\n\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n\n  const [formState, setFormState] = useState({addressTo: null, amount: 0});\n  const onChange = (_, data) => setFormState(prev => ({ ...prev, [data.state]: data.value }));\n\n  const { addressTo, amount } = formState;\n\n  const onSelectAddressTo = address => setFormState(prev => ({ ...prev, 'addressTo': address }));\n\n  const transfer = () => {\n    ontract.tx.transfer(0, gasLimit, addressTo, amount).signAndSend(accountPair, (result) => {\n      updateBalance();\n    });\n  }\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Transfer of ERC20 Tokens</h1>\n      <Form>\n        <Form.Field>\n          <Label basic color='teal'>\n            <Icon name='hand point right' />\n            1 Unit = 1000000000000\n          </Label>\n        </Form.Field>\n        <Form.Field>Transfer more than the existential amount for account with 0 balance</Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='To'\n            type='text'\n            placeholder='address'\n            state='addressTo'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label='Amount'\n            type='number'\n            state='amount'\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <Button onClick={transfer}>Transfer!</Button>\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n\nexport default function TransferERC20(props) {\n    const {api} = useSubstrate();\n    const {accountPair} = props;\n    return (api.registry && accountPair\n        ? <Main {...props} /> : null);\n}\n"]},"metadata":{},"sourceType":"module"}