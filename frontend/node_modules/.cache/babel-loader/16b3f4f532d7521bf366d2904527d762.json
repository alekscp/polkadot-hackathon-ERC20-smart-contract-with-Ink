{"ast":null,"code":"var _jsxFileName = \"/Users/aclapinpepin/code/substrate-front-end-template/src/LatestBlock.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate(); // const [metadata, setMetadata] = useState({ data: null, version: null });\n\n  const [latestBlock, setLatestBlock] = useState({\n    block: null\n  });\n  useEffect(() => {\n    const getLatestBlock = async () => {\n      try {\n        const block = await api.rpc.chain.getBlock();\n        console.log(\"BLOCK\", block);\n        setLatestBlock({\n          block\n        }); // setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getLatestBlock();\n  }, [api.rpc.chain]);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Latest Block\"), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"at block number \", latestBlock.header.number))), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }\n    }, \"Show Latest Block Information\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Latest Block\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, JSON.stringify(latestBlock, null, 2)))))))));\n}\n\nexport default function LatestBlock(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.getBlock ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/Users/aclapinpepin/code/substrate-front-end-template/src/LatestBlock.js"],"names":["React","useEffect","useState","Grid","Modal","Button","Card","useSubstrate","Main","props","api","latestBlock","setLatestBlock","block","getLatestBlock","rpc","chain","getBlock","console","log","e","error","header","number","JSON","stringify","LatestBlock"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  // const [metadata, setMetadata] = useState({ data: null, version: null });\n  const [latestBlock, setLatestBlock] = useState({ block: null });\n\n  useEffect(() => {\n    const getLatestBlock = async () => {\n      try {\n        const block = await api.rpc.chain.getBlock();\n        console.log(\"BLOCK\", block)\n        setLatestBlock({ block })\n        // setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getLatestBlock();\n  }, [api.rpc.chain]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Latest Block</Card.Header>\n          <Card.Meta>\n            <span>at block number {latestBlock.header.number}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Latest Block Information</Button>}>\n            <Modal.Header>Latest Block</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(latestBlock, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function LatestBlock (props) {\n  const { api } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.getBlock ? (\n    <Main {...props} />\n  ) : null;\n}\n\n"]},"metadata":{},"sourceType":"module"}