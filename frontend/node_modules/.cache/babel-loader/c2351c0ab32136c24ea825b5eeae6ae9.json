{"ast":null,"code":"var _jsxFileName = \"/Users/aclapinpepin/code/substrate-front-end-template/src/LatestBlock.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate(); // const [metadata, setMetadata] = useState({ data: null, version: null });\n\n  const [latestBlock, setLatestBlock] = useState({});\n  useEffect(() => {\n    const getLatestBlock = async () => {\n      try {\n        const block = api.rpc.chain.getBlock();\n        setLatestBlock({\n          block\n        }); // setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getLatestBlock();\n  }, [api.rpc.chain]);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"// \", /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, \"//   \", /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, \"//     \", /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }, \"Metadata\"), \"//     \", /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }\n  }, \"//       \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, \"v\", metadata.version), \"//     \"), \"//   \"), \"//   \", /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, \"//     \", /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    }, \"Show Metadata\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }\n  }, \"//       \", /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  }, \"Runtime Metadata\"), \"//       \", /*#__PURE__*/React.createElement(Modal.Content, {\n    scrolling: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }, \"//         \", /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }\n  }, \"//           \", /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }, \"//             \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }, JSON.stringify(metadata.data, null, 2)), \"//           \"), \"//         \"), \"//       \"), \"//     \"), \"//   \"), \"// \"));\n}\n\nexport default function LatestBlock(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.getBlock ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/Users/aclapinpepin/code/substrate-front-end-template/src/LatestBlock.js"],"names":["React","useEffect","useState","Grid","Modal","Button","Card","useSubstrate","Main","props","api","latestBlock","setLatestBlock","getLatestBlock","block","rpc","chain","getBlock","e","console","error","metadata","version","JSON","stringify","data","LatestBlock"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,QAA0C,mBAA1C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B,CADoB,CAEpB;;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMC,KAAK,GAAGJ,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,QAAd,EAAd;AACAL,QAAAA,cAAc,CAAC;AAAEE,UAAAA;AAAF,SAAD,CAAd,CAFE,CAGF;AACD,OAJD,CAIE,OAAOI,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KARD;;AASAL,IAAAA,cAAc;AACf,GAXQ,EAWN,CAACH,GAAG,CAACK,GAAJ,CAAQC,KAAT,CAXM,CAAT;AAaA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,0BAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQK,QAAQ,CAACC,OAAjB,CADF,YAFF,UADF,wBAOE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACE,oBAAC,KAAD;AAAO,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,4BAEE,oBAAC,KAAD,CAAO,OAAP;AAAe,IAAA,SAAS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACE,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAxB,EAA8B,IAA9B,EAAoC,CAApC,CAAP,CADF,kBADF,gBADF,cAFF,YADF,UAPF,QADL,CADF;AAwBD;;AAED,eAAe,SAASC,WAAT,CAAsBjB,KAAtB,EAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,SAAOG,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACK,GAAJ,CAAQC,KAAnB,IAA4BN,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,QAA1C,gBACL,oBAAC,IAAD,oBAAUR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,GAEH,IAFJ;AAGD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  // const [metadata, setMetadata] = useState({ data: null, version: null });\n  const [latestBlock, setLatestBlock] = useState({});\n\n  useEffect(() => {\n    const getLatestBlock = async () => {\n      try {\n        const block = api.rpc.chain.getBlock();\n        setLatestBlock({ block })\n        // setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getLatestBlock();\n  }, [api.rpc.chain]);\n\n  return (\n    <Grid.Column>\n      // <Card>\n      //   <Card.Content>\n      //     <Card.Header>Metadata</Card.Header>\n      //     <Card.Meta>\n      //       <span>v{metadata.version}</span>\n      //     </Card.Meta>\n      //   </Card.Content>\n      //   <Card.Content extra>\n      //     <Modal trigger={<Button>Show Metadata</Button>}>\n      //       <Modal.Header>Runtime Metadata</Modal.Header>\n      //       <Modal.Content scrolling>\n      //         <Modal.Description>\n      //           <pre>\n      //             <code>{JSON.stringify(metadata.data, null, 2)}</code>\n      //           </pre>\n      //         </Modal.Description>\n      //       </Modal.Content>\n      //     </Modal>\n      //   </Card.Content>\n      // </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function LatestBlock (props) {\n  const { api } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.getBlock ? (\n    <Main {...props} />\n  ) : null;\n}\n\n"]},"metadata":{},"sourceType":"module"}